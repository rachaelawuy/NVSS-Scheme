package View;

import Controller.Controller;
import Model.MyImage;
import com.google.zxing.ChecksumException;
import com.google.zxing.FormatException;
import com.google.zxing.NotFoundException;
import com.google.zxing.WriterException;
import java.io.IOException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Rachael
 */
public class View extends javax.swing.JFrame {

    private Decryption decrypt;
    private Encryption encrypt;
    private Home home;
    private Controller control;
    private int n;
    
    /**
     * Creates new form View
     */
    public View() {
        initComponents();
        this.decrypt= new Decryption(this);
        this.encrypt= new Encryption(this);
        this.home= new Home(this);
        this.setContentPane(home);
        this.setResizable(false);
        this.setTitle("Natural Visual Secret Sharing - Home");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View().setVisible(true);
            }
        });
    }
    
    public void setPane(int x){
        this.getContentPane().removeAll();
        if(x==1){
            home=new Home(this);
            this.setContentPane(home);
            this.setTitle("Natural Visual Secret Sharing - Home");
        } else if(x==2){
            encrypt=new Encryption(this);
            this.setContentPane(encrypt);
            this.setTitle("Natural Visual Secret Sharing - Encryption");
        } else {
            decrypt= new Decryption(this);
            this.setContentPane(decrypt);
            this.setTitle("Natural Visual Secret Sharing - Decryption");
        } 
        this.pack();
    }
    
    public void featureExtraction(int b, double pNoise, int seed) throws IOException{
        control.featureExtraction(b, pNoise, seed);
    }
    
    public void setSecretImage(MyImage secret){
        control.setSecretImage(secret);
    }
    
    public MyImage getSecretImage(){
        return control.getSecretImage();
    }
    
    public void setShare(MyImage[] share){
        control.setShare(share);
    }
    
    public boolean encrypt() throws IOException, WriterException {
        return control.encrypt();
    }
    
    public void decrypt(String input) throws IOException{
        control.decrypt(input);
    }
    
    public void setValueN(int input){
        this.n= input;
        createController(n);
    }
    
    public int getValueN(){
        return this.n;
    }
    
    private void createController(int n){
        this.control= new Controller(n);
    }
    
    public String readQRCode(String path) throws ChecksumException, FormatException, IOException, NotFoundException{
        return this.control.readQRCode(path);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
