/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.MyImage;
import com.google.zxing.ChecksumException;
import com.google.zxing.FormatException;
import com.google.zxing.NotFoundException;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Rachael
 */
public class Decryption extends javax.swing.JPanel {

    private View view;
    private String data;

    /**
     * Creates new form Decryption
     */
    public Decryption(View v) {
        initComponents();
        this.view = v;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelDecryptionTitle = new javax.swing.JLabel();
        labelQRCode = new javax.swing.JLabel();
        textFieldQRCode = new javax.swing.JTextField();
        labelNaturalShare = new javax.swing.JLabel();
        textFieldNaturalShare = new javax.swing.JTextField();
        buttonBack = new javax.swing.JButton();
        buttonProceed = new javax.swing.JButton();
        textFieldB = new javax.swing.JTextField();
        labelB = new javax.swing.JLabel();
        labelPNoise = new javax.swing.JLabel();
        labelSeed = new javax.swing.JLabel();
        textFieldSeed = new javax.swing.JTextField();
        textFieldPNoise = new javax.swing.JTextField();

        labelDecryptionTitle.setFont(new java.awt.Font("Yu Mincho Light", 1, 18)); // NOI18N
        labelDecryptionTitle.setText("Decryption");

        labelQRCode.setFont(new java.awt.Font("Yu Mincho Light", 0, 14)); // NOI18N
        labelQRCode.setText("Select QR Code:");

        textFieldQRCode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textFieldQRCodeMouseClicked(evt);
            }
        });

        labelNaturalShare.setFont(new java.awt.Font("Yu Mincho Light", 0, 14)); // NOI18N
        labelNaturalShare.setText("Select n-1 natural share:");

        textFieldNaturalShare.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textFieldNaturalShareMouseClicked(evt);
            }
        });

        buttonBack.setText("Back");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        buttonProceed.setText("Proceed");
        buttonProceed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonProceedActionPerformed(evt);
            }
        });

        labelB.setFont(new java.awt.Font("Yu Mincho Light", 0, 14)); // NOI18N
        labelB.setText("Block pixel size:");

        labelPNoise.setFont(new java.awt.Font("Yu Mincho Light", 0, 14)); // NOI18N
        labelPNoise.setText("Probability of noise:");

        labelSeed.setFont(new java.awt.Font("Yu Mincho Light", 0, 14)); // NOI18N
        labelSeed.setText("Seed:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(253, 253, 253)
                .addComponent(labelDecryptionTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(114, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(labelNaturalShare)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelQRCode)
                                .addGap(43, 43, 43)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldQRCode, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(buttonBack)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(buttonProceed))
                                .addComponent(textFieldNaturalShare, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(labelSeed)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textFieldSeed, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelB)
                                .addGap(61, 61, 61)
                                .addComponent(textFieldB, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(1, 1, 1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(labelPNoise)
                        .addGap(38, 38, 38)
                        .addComponent(textFieldPNoise, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(127, 127, 127))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(labelDecryptionTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelQRCode)
                    .addComponent(textFieldQRCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldNaturalShare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNaturalShare))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldPNoise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPNoise))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldSeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSeed))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonProceed)
                    .addComponent(buttonBack))
                .addGap(55, 55, 55))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        this.view.setPane(1);
    }//GEN-LAST:event_buttonBackActionPerformed

    private void textFieldNaturalShareMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textFieldNaturalShareMouseClicked
        // TODO add your handling code here:
        try {
            JFileChooser chooser = new JFileChooser();
            chooser.setMultiSelectionEnabled(true);
            chooser.showOpenDialog(null);
            File[] digitalImage = chooser.getSelectedFiles();
            if (digitalImage.length != this.view.getValueN() - 1) {
                JOptionPane.showMessageDialog(null, "The number of uploaded files is not N-1");
            } else {
                String filename = "";
                for (int i = 0; i < digitalImage.length; i++) {
                    filename += digitalImage[i].getAbsolutePath();
                    if (i < digitalImage.length - 1) {
                        filename += ";";
                    }
                }
                MyImage[] shares = new MyImage[digitalImage.length];
                textFieldNaturalShare.setText(filename);
                for (int i = 0; i < digitalImage.length; i++) {
                    try {
                        BufferedImage in = ImageIO.read(digitalImage[i]);
                        BufferedImage newImage = new BufferedImage(in.getWidth(), in.getHeight(), BufferedImage.TYPE_INT_RGB);
                        newImage.getGraphics().drawImage(in, 0, 0, null);
                        shares[i] = new MyImage(newImage);
                    } catch (IOException ex) {
                        Logger.getLogger(Encryption.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                view.setShare(shares);
            }
        } catch (NullPointerException e) {
            textFieldNaturalShare.setText("");
            JOptionPane.showMessageDialog(null, "Image(s) has not been inputted or file formats are wrong");
        }
    }//GEN-LAST:event_textFieldNaturalShareMouseClicked

    private void buttonProceedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonProceedActionPerformed
        // TODO add your handling code here:
        if (!textFieldB.getText().equals("") && !textFieldNaturalShare.getText().equals("") && !textFieldPNoise.getText().equals("") && !textFieldQRCode.getText().equals("") && !textFieldSeed.getText().equals("")) {
            try {
                int b = Integer.parseInt(textFieldB.getText());
                double pNoise = Double.parseDouble(textFieldPNoise.getText());
                int seed = Integer.parseInt(textFieldSeed.getText());
                System.out.println("b: "+b+", pnoise: "+pNoise+", seed: "+seed);
                view.featureExtraction(b, pNoise, seed);
                view.decrypt(data);
                JOptionPane.showMessageDialog(null, "Successfully constructed!");
                System.exit(0);
            }catch (IOException ex) {
                Logger.getLogger(Decryption.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please fill all the fields");
        }
    }//GEN-LAST:event_buttonProceedActionPerformed

    private void textFieldQRCodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textFieldQRCodeMouseClicked
        // TODO add your handling code here:
        try {
            JFileChooser chooser = new JFileChooser();
            chooser.setMultiSelectionEnabled(false);
            chooser.showOpenDialog(null);
            File temp = chooser.getSelectedFile();
            textFieldQRCode.setText(temp.getAbsolutePath());
            String path = textFieldQRCode.getText();
            try {
                this.data = this.view.readQRCode(path);
            } catch (ChecksumException | FormatException ex) {
                Logger.getLogger(Decryption.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Decryption.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NotFoundException ex) {
                Logger.getLogger(Decryption.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (NullPointerException e) {
            textFieldQRCode.setText("");
            JOptionPane.showMessageDialog(null, "QR Code has not been inputted or file format is wrong");
        }
    }//GEN-LAST:event_textFieldQRCodeMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonProceed;
    private javax.swing.JLabel labelB;
    private javax.swing.JLabel labelDecryptionTitle;
    private javax.swing.JLabel labelNaturalShare;
    private javax.swing.JLabel labelPNoise;
    private javax.swing.JLabel labelQRCode;
    private javax.swing.JLabel labelSeed;
    private javax.swing.JTextField textFieldB;
    private javax.swing.JTextField textFieldNaturalShare;
    private javax.swing.JTextField textFieldPNoise;
    private javax.swing.JTextField textFieldQRCode;
    private javax.swing.JTextField textFieldSeed;
    // End of variables declaration//GEN-END:variables
}
