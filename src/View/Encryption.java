/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.MyImage;
import com.google.zxing.WriterException;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Rachael
 */
public class Encryption extends javax.swing.JPanel {

    private View view;
//    private File secretImage;
//    private File[] digitalImage;

    /**
     * Creates new form Encryption
     */
    public Encryption(View v) {
        initComponents();
        this.view = v;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelEncryptionTitle = new javax.swing.JLabel();
        labelSecretImage = new javax.swing.JLabel();
        textFieldSecretImage = new javax.swing.JTextField();
        labelNaturalShare = new javax.swing.JLabel();
        textFieldNaturalShare = new javax.swing.JTextField();
        buttonProceed = new javax.swing.JButton();
        buttonBack = new javax.swing.JButton();
        textFieldB = new javax.swing.JTextField();
        labelB = new javax.swing.JLabel();
        textFieldPNoise = new javax.swing.JTextField();
        labelPNoise = new javax.swing.JLabel();
        labelSeed = new javax.swing.JLabel();
        textFieldSeed = new javax.swing.JTextField();

        labelEncryptionTitle.setFont(new java.awt.Font("Yu Mincho Light", 1, 18)); // NOI18N
        labelEncryptionTitle.setText("Encryption");

        labelSecretImage.setFont(new java.awt.Font("Yu Mincho Light", 0, 14)); // NOI18N
        labelSecretImage.setText("Select secret image:");

        textFieldSecretImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textFieldSecretImageMouseClicked(evt);
            }
        });

        labelNaturalShare.setFont(new java.awt.Font("Yu Mincho Light", 0, 14)); // NOI18N
        labelNaturalShare.setText("Select n-1 natural share:");

        textFieldNaturalShare.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textFieldNaturalShareMouseClicked(evt);
            }
        });

        buttonProceed.setText("Proceed");
        buttonProceed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonProceedActionPerformed(evt);
            }
        });

        buttonBack.setText("Back");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        labelB.setFont(new java.awt.Font("Yu Mincho Light", 0, 14)); // NOI18N
        labelB.setText("Block pixel size:");

        labelPNoise.setFont(new java.awt.Font("Yu Mincho Light", 0, 14)); // NOI18N
        labelPNoise.setText("Probability of noise:");

        labelSeed.setFont(new java.awt.Font("Yu Mincho Light", 0, 14)); // NOI18N
        labelSeed.setText("Seed:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(labelEncryptionTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelNaturalShare)
                            .addComponent(labelSecretImage)
                            .addComponent(labelB)
                            .addComponent(labelPNoise)
                            .addComponent(labelSeed))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldSecretImage, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(buttonBack)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(buttonProceed))
                                .addComponent(textFieldNaturalShare, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(textFieldB, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(textFieldPNoise, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(textFieldSeed, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(labelEncryptionTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldSecretImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSecretImage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldNaturalShare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNaturalShare))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldPNoise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPNoise))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldSeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSeed))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonProceed)
                    .addComponent(buttonBack))
                .addGap(56, 56, 56))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        this.view.setPane(1);
    }//GEN-LAST:event_buttonBackActionPerformed

    private void textFieldSecretImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textFieldSecretImageMouseClicked
        // TODO add your handling code here:
        try {
            JFileChooser chooser = new JFileChooser();
            chooser.setMultiSelectionEnabled(false);
            chooser.showOpenDialog(null);
            File secretImage = chooser.getSelectedFile();
            textFieldSecretImage.setText(secretImage.getAbsolutePath());
            BufferedImage bufImg;
            try {
                bufImg = ImageIO.read(secretImage);
                BufferedImage convertedImg = new BufferedImage(bufImg.getWidth(), bufImg.getHeight(), BufferedImage.TYPE_INT_RGB);
                convertedImg.getGraphics().drawImage(bufImg, 0, 0, null);
                view.setSecretImage(new MyImage(convertedImg));
            } catch (IOException ex) {
                Logger.getLogger(Encryption.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (NullPointerException e) {
            textFieldSecretImage.setText("");
            JOptionPane.showMessageDialog(null, "Image has not been inputted or file format is wrong");
        }
    }//GEN-LAST:event_textFieldSecretImageMouseClicked

    private void textFieldNaturalShareMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textFieldNaturalShareMouseClicked
        // TODO add your handling code here:
        try {
            JFileChooser chooser = new JFileChooser();
            chooser.setMultiSelectionEnabled(true);
            chooser.showOpenDialog(null);
            File[] digitalImage = chooser.getSelectedFiles();
            if (digitalImage.length != this.view.getValueN() - 1) {
                JOptionPane.showMessageDialog(null, "The number of uploaded files is not N-1");
            } else {
                String filename = "";
                for (int i = 0; i < digitalImage.length; i++) {
                    filename += digitalImage[i].getAbsolutePath();
                    if (i < digitalImage.length - 1) {
                        filename += ";";
                    }
                }
                textFieldNaturalShare.setText(filename);
                MyImage[] shares= new MyImage[digitalImage.length];
                for (int i = 0; i < digitalImage.length; i++) {
                    try {
                        BufferedImage in = ImageIO.read(digitalImage[i]);
                        BufferedImage newImage = new BufferedImage(in.getWidth(), in.getHeight(), BufferedImage.TYPE_INT_RGB);
                        newImage.getGraphics().drawImage(in, 0, 0, null);
                        shares[i]= new MyImage(newImage);
                    } catch (IOException ex) {
                        Logger.getLogger(Encryption.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                view.setShare(shares);
            }
        } catch (NullPointerException e) {
            textFieldNaturalShare.setText("");
            JOptionPane.showMessageDialog(null, "Image(s) has not been inputted or file formats are wrong");
        }
    }//GEN-LAST:event_textFieldNaturalShareMouseClicked

    private void buttonProceedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonProceedActionPerformed
        // TODO add your handling code here:
        if (!textFieldB.getText().equals("") && !textFieldNaturalShare.getText().equals("") && !textFieldPNoise.getText().equals("") && !textFieldSecretImage.getText().equals("") && !textFieldSeed.getText().equals("")) {
            try {
                int b = Integer.parseInt(textFieldB.getText());
                int max = this.view.getSecretImage().getColoredFeatureMatrix().length;
                if (b <= 0 || b >= max || (max % b != 0)) {
                    JOptionPane.showMessageDialog(null, "Block pixel size is not suitable.");
                } else {
                    double pNoise = Double.parseDouble(textFieldPNoise.getText());
                    int seed = Integer.parseInt(textFieldSeed.getText());
                    try {
                        view.featureExtraction(b, pNoise, seed);
                        if(view.encrypt()){
                            JOptionPane.showMessageDialog(null, "QRCode successfully created!");
                        } else {
                            JOptionPane.showMessageDialog(null, "Shares size too big!");
                        }
                        System.exit(0);
                    } catch (IOException | WriterException ex) {
                        Logger.getLogger(Encryption.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Block pixel size, probability of noise, and seed have to be a number");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please fill all the fields");
        }
    }//GEN-LAST:event_buttonProceedActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonProceed;
    private javax.swing.JLabel labelB;
    private javax.swing.JLabel labelEncryptionTitle;
    private javax.swing.JLabel labelNaturalShare;
    private javax.swing.JLabel labelPNoise;
    private javax.swing.JLabel labelSecretImage;
    private javax.swing.JLabel labelSeed;
    private javax.swing.JTextField textFieldB;
    private javax.swing.JTextField textFieldNaturalShare;
    private javax.swing.JTextField textFieldPNoise;
    private javax.swing.JTextField textFieldSecretImage;
    private javax.swing.JTextField textFieldSeed;
    // End of variables declaration//GEN-END:variables
}
